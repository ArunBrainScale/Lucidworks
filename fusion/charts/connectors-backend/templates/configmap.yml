{{- $tlsEnabled := ( eq (include "fusion.tls.enabled" .) "true" ) -}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fusion.connectors-backend.fullname" . }}
  labels:
{{ include "fusion.connectors-backend.labels" . | indent 4 }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
data:
  application-k8s.yml: |-
    spring:
      profiles:
        include: default
      cloud:
        kubernetes:
          enabled: true
          ribbon:
            enabled: true
          secrets:
            enabled: true
          config:
            namespace: default
            name: default-config-name
            enabled: true
            path:
            sources:
        zookeeper:
          discovery:
            enabled: false
    ribbon:
      zookeeper:
        enabled: false
    services:
      zookeeper:
         connect-string: {{ include "fusion.zkConnectionString" . }}
    app:
      connectors-backend:
         name: {{ template "fusion.connectors-backend.fullname" . }}
      plugins:
         replicas: {{ .Values.plugins.replicas }}
         crd-create: {{ .Values.plugins.crd.create }}
      grpc:
         tlsEnabled: {{ $tlsEnabled }}
         serverCertChainFile: /etc/ssl/keystores/tls.crt
         serverPrivateKey: /etc/ssl/keystores/tls.key
         trustCertCollectionFile: /etc/ssl/keystores/ca.crt
    {{- if  $tlsEnabled  }}
    server:
      ssl:
        key-store-type: pkcs12
        key-store: /etc/ssl/keystores/keystore.jks
        key-store-password: {{ .Values.tls.keystorePassword }}
        trust-store: /etc/ssl/keystores/truststore.jks
        trust-store-password: {{ .Values.tls.keystorePassword }}
{{- end }}
    plugins:
      bootstrap:
        install: {{ .Values.bootstrapEnabled }}
      repository:
        id: {{ .Values.plugins.repository.id }}
        name: {{ .Values.plugins.repository.name }}